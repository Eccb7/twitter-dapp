/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "TorusWalletAdapter": () => (/* reexport */ TorusWalletAdapter)
});

;// CONCATENATED MODULE: external "@babel/runtime/helpers/asyncToGenerator"
const asyncToGenerator_namespaceObject = require("@babel/runtime/helpers/asyncToGenerator");
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/classCallCheck"
const classCallCheck_namespaceObject = require("@babel/runtime/helpers/classCallCheck");
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/createClass"
const createClass_namespaceObject = require("@babel/runtime/helpers/createClass");
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/assertThisInitialized"
const assertThisInitialized_namespaceObject = require("@babel/runtime/helpers/assertThisInitialized");
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/get"
const get_namespaceObject = require("@babel/runtime/helpers/get");
var get_default = /*#__PURE__*/__webpack_require__.n(get_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/inherits"
const inherits_namespaceObject = require("@babel/runtime/helpers/inherits");
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/possibleConstructorReturn"
const possibleConstructorReturn_namespaceObject = require("@babel/runtime/helpers/possibleConstructorReturn");
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/getPrototypeOf"
const getPrototypeOf_namespaceObject = require("@babel/runtime/helpers/getPrototypeOf");
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/defineProperty"
const defineProperty_namespaceObject = require("@babel/runtime/helpers/defineProperty");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/regenerator"
const regenerator_namespaceObject = require("@babel/runtime/regenerator");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator_namespaceObject);
;// CONCATENATED MODULE: external "@toruslabs/torus-embed"
const torus_embed_namespaceObject = require("@toruslabs/torus-embed");
var torus_embed_default = /*#__PURE__*/__webpack_require__.n(torus_embed_namespaceObject);
;// CONCATENATED MODULE: external "@web3auth/base"
const base_namespaceObject = require("@web3auth/base");
;// CONCATENATED MODULE: external "@web3auth/base-evm-adapter"
const base_evm_adapter_namespaceObject = require("@web3auth/base-evm-adapter");
;// CONCATENATED MODULE: ./src/torusWalletAdapter.ts











function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty_default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }




var TorusWalletAdapter = /*#__PURE__*/function (_BaseEvmAdapter) {
  inherits_default()(TorusWalletAdapter, _BaseEvmAdapter);

  var _super = _createSuper(TorusWalletAdapter);

  function TorusWalletAdapter(params) {
    var _this;

    classCallCheck_default()(this, TorusWalletAdapter);

    _this = _super.call(this, params);

    defineProperty_default()(assertThisInitialized_default()(_this), "name", base_namespaceObject.WALLET_ADAPTERS.TORUS_EVM);

    defineProperty_default()(assertThisInitialized_default()(_this), "adapterNamespace", base_namespaceObject.ADAPTER_NAMESPACES.EIP155);

    defineProperty_default()(assertThisInitialized_default()(_this), "currentChainNamespace", base_namespaceObject.CHAIN_NAMESPACES.EIP155);

    defineProperty_default()(assertThisInitialized_default()(_this), "type", base_namespaceObject.ADAPTER_CATEGORY.EXTERNAL);

    defineProperty_default()(assertThisInitialized_default()(_this), "status", base_namespaceObject.ADAPTER_STATUS.NOT_READY);

    defineProperty_default()(assertThisInitialized_default()(_this), "torusInstance", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "torusWalletOptions", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "initParams", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "loginSettings", {});

    defineProperty_default()(assertThisInitialized_default()(_this), "rehydrated", false);

    _this.torusWalletOptions = params.adapterSettings || {};
    _this.initParams = params.initParams || {};
    _this.loginSettings = params.loginSettings || {};
    _this.chainConfig = params.chainConfig || null;
    _this.sessionTime = params.sessionTime || 86400;
    return _this;
  }

  createClass_default()(TorusWalletAdapter, [{
    key: "provider",
    get: function get() {
      if (this.status === base_namespaceObject.ADAPTER_STATUS.CONNECTED && this.torusInstance) {
        return this.torusInstance.provider;
      }

      return null;
    },
    set: function set(_) {
      throw new Error("Not implemented");
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(options) {
        var network, _ref, blockExplorer, displayName, chainId, ticker, tickerName, _ref2, _chainId2, _blockExplorer, _displayName, rpcTarget, _ticker, _tickerName;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                get_default()(getPrototypeOf_default()(TorusWalletAdapter.prototype), "checkInitializationRequirements", this).call(this); // set chainConfig for mainnet by default if not set


                if (!this.chainConfig) {
                  this.chainConfig = (0,base_namespaceObject.getChainConfig)(base_namespaceObject.CHAIN_NAMESPACES.EIP155, 1);
                  _ref = this.chainConfig, blockExplorer = _ref.blockExplorer, displayName = _ref.displayName, chainId = _ref.chainId, ticker = _ref.ticker, tickerName = _ref.tickerName;
                  network = {
                    chainId: Number.parseInt(chainId, 16),
                    host: "mainnet",
                    blockExplorer: blockExplorer,
                    networkName: displayName,
                    ticker: ticker,
                    tickerName: tickerName
                  };
                } else {
                  _ref2 = this.chainConfig, _chainId2 = _ref2.chainId, _blockExplorer = _ref2.blockExplorer, _displayName = _ref2.displayName, rpcTarget = _ref2.rpcTarget, _ticker = _ref2.ticker, _tickerName = _ref2.tickerName;
                  network = {
                    chainId: Number.parseInt(_chainId2, 16),
                    host: rpcTarget,
                    blockExplorer: _blockExplorer,
                    networkName: _displayName,
                    ticker: _ticker,
                    tickerName: _tickerName
                  };
                }

                this.torusInstance = new (torus_embed_default())(this.torusWalletOptions);
                base_namespaceObject.log.debug("initializing torus evm adapter init");
                _context.next = 6;
                return this.torusInstance.init(_objectSpread(_objectSpread({
                  showTorusButton: false
                }, this.initParams), {}, {
                  network: network
                }));

              case 6:
                this.status = base_namespaceObject.ADAPTER_STATUS.READY;
                this.emit(base_namespaceObject.ADAPTER_EVENTS.READY, base_namespaceObject.WALLET_ADAPTERS.TORUS_EVM);
                _context.prev = 8;
                base_namespaceObject.log.debug("initializing torus evm adapter");

                if (!options.autoConnect) {
                  _context.next = 14;
                  break;
                }

                this.rehydrated = true;
                _context.next = 14;
                return this.connect();

              case 14:
                _context.next = 20;
                break;

              case 16:
                _context.prev = 16;
                _context.t0 = _context["catch"](8);
                base_namespaceObject.log.error("Failed to connect with torus evm provider", _context.t0);
                this.emit(base_namespaceObject.ADAPTER_EVENTS.ERRORED, _context.t0);

              case 20:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[8, 16]]);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "connect",
    value: function () {
      var _connect = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var chainId, _ref3, _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName, network, updatedChainID;

        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                get_default()(getPrototypeOf_default()(TorusWalletAdapter.prototype), "checkConnectionRequirements", this).call(this);

                if (this.torusInstance) {
                  _context2.next = 3;
                  break;
                }

                throw base_namespaceObject.WalletInitializationError.notReady("Torus wallet is not initialized");

              case 3:
                this.status = base_namespaceObject.ADAPTER_STATUS.CONNECTING;
                this.emit(base_namespaceObject.ADAPTER_EVENTS.CONNECTING, {
                  adapter: base_namespaceObject.WALLET_ADAPTERS.TORUS_EVM
                });
                _context2.prev = 5;
                _context2.next = 8;
                return this.torusInstance.login(this.loginSettings);

              case 8:
                chainId = this.torusInstance.provider.chainId;

                if (!(chainId && parseInt(chainId) !== parseInt(this.chainConfig.chainId, 16))) {
                  _context2.next = 19;
                  break;
                }

                _ref3 = this.chainConfig, _chainId = _ref3.chainId, blockExplorer = _ref3.blockExplorer, displayName = _ref3.displayName, rpcTarget = _ref3.rpcTarget, ticker = _ref3.ticker, tickerName = _ref3.tickerName;
                network = {
                  chainId: Number.parseInt(_chainId, 16),
                  host: rpcTarget,
                  blockExplorer: blockExplorer,
                  networkName: displayName,
                  tickerName: tickerName,
                  ticker: ticker
                }; // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed
                // chainConfig but will connect to the one that user switched to.
                // So here trying to switch network to the one that was initially passed in chainConfig.

                _context2.next = 14;
                return this.torusInstance.setProvider(_objectSpread({}, network));

              case 14:
                _context2.next = 16;
                return this.torusInstance.ethereum.request({
                  method: "eth_chainId"
                });

              case 16:
                updatedChainID = _context2.sent;

                if (!(updatedChainID && parseInt(updatedChainID) !== parseInt(this.chainConfig.chainId, 16))) {
                  _context2.next = 19;
                  break;
                }

                throw base_namespaceObject.WalletInitializationError.fromCode(5000, "Not connected to correct chainId. Expected: ".concat(this.chainConfig.chainId, ", Current: ").concat(updatedChainID));

              case 19:
                this.status = base_namespaceObject.ADAPTER_STATUS.CONNECTED;
                this.torusInstance.showTorusButton();
                this.emit(base_namespaceObject.ADAPTER_STATUS.CONNECTED, {
                  adapter: base_namespaceObject.WALLET_ADAPTERS.TORUS_EVM,
                  reconnected: this.rehydrated
                });
                return _context2.abrupt("return", this.provider);

              case 25:
                _context2.prev = 25;
                _context2.t0 = _context2["catch"](5);
                // ready again to be connected
                this.status = base_namespaceObject.ADAPTER_STATUS.READY;
                this.rehydrated = false;
                this.emit(base_namespaceObject.ADAPTER_STATUS.ERRORED, _context2.t0);
                throw _context2.t0 instanceof base_namespaceObject.Web3AuthError ? _context2.t0 : base_namespaceObject.WalletLoginError.connectionError("Failed to login with torus wallet");

              case 31:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[5, 25]]);
      }));

      function connect() {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        var options,
            _args3 = arguments;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {
                  cleanup: false
                };

                if (this.torusInstance) {
                  _context3.next = 3;
                  break;
                }

                throw base_namespaceObject.WalletInitializationError.notReady("Torus wallet is not initialized");

              case 3:
                _context3.next = 5;
                return get_default()(getPrototypeOf_default()(TorusWalletAdapter.prototype), "disconnect", this).call(this);

              case 5:
                _context3.next = 7;
                return this.torusInstance.logout();

              case 7:
                this.torusInstance.hideTorusButton();

                if (options.cleanup) {
                  this.status = base_namespaceObject.ADAPTER_STATUS.NOT_READY;
                  this.torusInstance = null;
                } else {
                  // ready to be connected again
                  this.status = base_namespaceObject.ADAPTER_STATUS.READY;
                }

                this.rehydrated = false;
                this.emit(base_namespaceObject.ADAPTER_EVENTS.DISCONNECTED);

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function disconnect() {
        return _disconnect.apply(this, arguments);
      }

      return disconnect;
    }()
  }, {
    key: "getUserInfo",
    value: function () {
      var _getUserInfo = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var userInfo;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(this.status !== base_namespaceObject.ADAPTER_STATUS.CONNECTED)) {
                  _context4.next = 2;
                  break;
                }

                throw base_namespaceObject.WalletLoginError.notConnectedError("Not connected with wallet");

              case 2:
                if (this.torusInstance) {
                  _context4.next = 4;
                  break;
                }

                throw base_namespaceObject.WalletInitializationError.notReady("Torus wallet is not initialized");

              case 4:
                _context4.next = 6;
                return this.torusInstance.getUserInfo("");

              case 6:
                userInfo = _context4.sent;
                return _context4.abrupt("return", userInfo);

              case 8:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getUserInfo() {
        return _getUserInfo.apply(this, arguments);
      }

      return getUserInfo;
    }()
  }, {
    key: "setAdapterSettings",
    value: function setAdapterSettings(options) {
      if (this.status === base_namespaceObject.ADAPTER_STATUS.READY) return;

      if (options !== null && options !== void 0 && options.sessionTime) {
        this.sessionTime = options.sessionTime;
      }

      if (options !== null && options !== void 0 && options.clientId) {
        this.clientId = options.clientId;
      }
    }
  }]);

  return TorusWalletAdapter;
}(base_evm_adapter_namespaceObject.BaseEvmAdapter);
;// CONCATENATED MODULE: ./src/index.ts

module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=torusEvmAdapter.cjs.js.map