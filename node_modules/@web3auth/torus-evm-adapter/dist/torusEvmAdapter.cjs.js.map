{"version":3,"file":"torusEvmAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-evm-adapter/webpack/bootstrap","webpack://@web3auth/torus-evm-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-evm-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-evm-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-evm-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@toruslabs/torus-embed\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/torus-evm-adapter/./src/torusWalletAdapter.ts","webpack://@web3auth/torus-evm-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import Torus, { LoginParams, NetworkInterface, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\nexport interface TorusWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: LoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n  clientId?: string;\n}\n\nexport class TorusWalletAdapter extends BaseEvmAdapter<never> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_EVM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: LoginParams = {};\n\n  private rehydrated = false;\n\n  constructor(params: TorusWalletOptions) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n    this.sessionTime = params.sessionTime || 86400;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.torusInstance) {\n      return this.torusInstance.provider as unknown as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n      const { blockExplorer, displayName, chainId, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId: Number.parseInt(chainId, 16), host: \"mainnet\", blockExplorer, networkName: displayName, ticker, tickerName };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId: Number.parseInt(chainId, 16), host: rpcTarget, blockExplorer, networkName: displayName, ticker, tickerName };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus evm adapter init\");\n    await this.torusInstance.init({\n      showTorusButton: false,\n      ...this.initParams,\n      network,\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n\n    try {\n      log.debug(\"initializing torus evm adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with torus evm provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_EVM });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      const { chainId } = this.torusInstance.provider;\n      if (chainId && parseInt(chainId) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n        const { chainId: _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n        const network: NetworkInterface = {\n          chainId: Number.parseInt(_chainId, 16),\n          host: rpcTarget,\n          blockExplorer,\n          networkName: displayName,\n          tickerName,\n          ticker,\n        };\n        // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n        // chainConfig but will connect to the one that user switched to.\n        // So here trying to switch network to the one that was initially passed in chainConfig.\n        await this.torusInstance.setProvider({\n          ...network,\n        });\n        const updatedChainID = await this.torusInstance.ethereum.request<string>({ method: \"eth_chainId\" });\n        if (updatedChainID && parseInt(updatedChainID) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n          throw WalletInitializationError.fromCode(\n            5000,\n            `Not connected to correct chainId. Expected: ${(this.chainConfig as CustomChainConfig).chainId}, Current: ${updatedChainID}`\n          );\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_EVM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_STATUS.ERRORED, error);\n      throw error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await super.disconnect();\n    await this.torusInstance.logout();\n    this.torusInstance.hideTorusButton();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo(\"\");\n    return userInfo;\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n}\n","export * from \"./torusWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","TorusWalletAdapter","params","TORUS_EVM","EIP155","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","sessionTime","status","CONNECTED","torusInstance","provider","_","Error","options","blockExplorer","displayName","chainId","ticker","tickerName","network","Number","parseInt","host","networkName","rpcTarget","debug","init","showTorusButton","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","notReady","CONNECTING","adapter","login","_chainId","setProvider","ethereum","request","method","updatedChainID","fromCode","reconnected","connectionError","cleanup","logout","hideTorusButton","DISCONNECTED","notConnectedError","getUserInfo","userInfo","clientId"],"sourceRoot":""}