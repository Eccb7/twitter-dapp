{"version":3,"file":"openloginAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/openlogin-adapter/external commonjs2 \"@toruslabs/openlogin-ed25519\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/ethereum-provider\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/openlogin-adapter/webpack/bootstrap","webpack://@web3auth/openlogin-adapter/webpack/runtime/compat get default export","webpack://@web3auth/openlogin-adapter/webpack/runtime/create fake namespace object","webpack://@web3auth/openlogin-adapter/webpack/runtime/define property getters","webpack://@web3auth/openlogin-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/openlogin-adapter/webpack/runtime/make namespace object","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@toruslabs/openlogin\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/openlogin-adapter/./src/config.ts","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/base-provider\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"lodash.merge\"","webpack://@web3auth/openlogin-adapter/./src/openloginAdapter.ts","webpack://@web3auth/openlogin-adapter/./src/index.ts"],"sourcesContent":["module.exports = require(\"@toruslabs/openlogin-ed25519\");","module.exports = require(\"@web3auth/ethereum-provider\");","module.exports = require(\"@web3auth/solana-provider\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","import { OPENLOGIN_NETWORK, UX_MODE } from \"@toruslabs/openlogin\";\nimport { ChainNamespaceType, getChainConfig } from \"@web3auth/base\";\n\nimport { OpenloginAdapterOptions } from \"./interface\";\n\nexport const getOpenloginDefaultOptions = (chainNamespace?: ChainNamespaceType, chainId?: number | string): OpenloginAdapterOptions => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP,\n    },\n    chainConfig: chainNamespace ? getChainConfig(chainNamespace, chainId) : null,\n    loginSettings: {},\n  };\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","import OpenLogin, { getHashQueryParams, LoginParams, OPENLOGIN_NETWORK, OpenLoginOptions, SUPPORTED_KEY_CURVES, UX_MODE } from \"@toruslabs/openlogin\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { CommonPrivateKeyProvider, IBaseProvider } from \"@web3auth/base-provider\";\nimport merge from \"lodash.merge\";\n\nimport { getOpenloginDefaultOptions } from \"./config\";\nimport type { LoginSettings, OpenloginAdapterOptions } from \"./interface\";\n\nexport type OpenloginLoginParams = LoginParams & {\n  // to maintain backward compatibility\n  login_hint?: string;\n};\n\ntype PrivateKeyProvider = IBaseProvider<string>;\n\nexport class OpenloginAdapter extends BaseAdapter<OpenloginLoginParams> {\n  readonly name: string = WALLET_ADAPTERS.OPENLOGIN;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.MULTICHAIN;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.IN_APP;\n\n  public openloginInstance: OpenLogin | null = null;\n\n  public clientId: string;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  private openloginOptions: OpenLoginOptions;\n\n  private loginSettings: LoginSettings = {};\n\n  private privKeyProvider: PrivateKeyProvider | null = null;\n\n  constructor(params: OpenloginAdapterOptions) {\n    super();\n    log.debug(\"const openlogin adapter\", params);\n    const defaultOptions = getOpenloginDefaultOptions(params.chainConfig?.chainNamespace, params.chainConfig?.chainId);\n    this.openloginOptions = {\n      clientId: \"\",\n      network: OPENLOGIN_NETWORK.MAINNET,\n      ...defaultOptions.adapterSettings,\n      ...(params.adapterSettings || {}),\n    };\n    this.clientId = params.adapterSettings?.clientId as string;\n    this.loginSettings = { ...defaultOptions.loginSettings, ...params.loginSettings };\n    this.sessionTime = this.loginSettings.sessionTime || 86400;\n    // if no chainNamespace is passed then chain config should be set before calling init\n    if (params.chainConfig?.chainNamespace) {\n      this.currentChainNamespace = params.chainConfig?.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = { ...defaultChainIdConfig, ...params?.chainConfig };\n      log.debug(\"const openlogin chainConfig\", this.chainConfig);\n      if (!this.chainConfig.rpcTarget && params.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.privKeyProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.openloginOptions?.clientId) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    let isRedirectResult = false;\n\n    if (this.openloginOptions.uxMode === UX_MODE.REDIRECT) {\n      const redirectResult = getHashQueryParams();\n      if (Object.keys(redirectResult).length > 0 && redirectResult._pid) {\n        isRedirectResult = true;\n      }\n    }\n    this.openloginOptions = {\n      ...this.openloginOptions,\n      replaceUrlOnRedirect: isRedirectResult,\n    };\n    this.openloginInstance = new OpenLogin(this.openloginOptions);\n    log.debug(\"initializing openlogin adapter init\");\n\n    await this.openloginInstance.init();\n\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      log.debug(\"initializing openlogin adapter\");\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params?: OpenloginLoginParams): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { ...params, adapter: WALLET_ADAPTERS.OPENLOGIN });\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error: unknown) {\n      log.error(\"Failed to connect with openlogin provider\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if ((error as Error)?.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      }\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async authenticateUser(): Promise<{ idToken: string }> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const userInfo = await this.getUserInfo();\n    return {\n      idToken: userInfo.idToken as string,\n    };\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings: OpenLoginOptions & { sessionTime: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = { ...defaultOptions.adapterSettings, ...(this.openloginOptions || {}), ...adapterSettings };\n    if (adapterSettings.sessionTime) {\n      this.loginSettings = { ...this.loginSettings, sessionTime: adapterSettings.sessionTime };\n    }\n    if (adapterSettings.clientId) {\n      this.clientId = adapterSettings.clientId;\n    }\n  }\n\n  // should be called only before initialization.\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  private async connectWithProvider(params?: OpenloginLoginParams): Promise<void> {\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      const { SolanaPrivateKeyProvider } = await import(\"@web3auth/solana-provider\");\n      this.privKeyProvider = new SolanaPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.EIP155) {\n      const { EthereumPrivateKeyProvider } = await import(\"@web3auth/ethereum-provider\");\n      this.privKeyProvider = new EthereumPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.privKeyProvider = new CommonPrivateKeyProvider();\n    } else {\n      throw new Error(`Invalid chainNamespace: ${this.currentChainNamespace} found while connecting to wallet`);\n    }\n    // if not logged in then login\n    if (!this.openloginInstance.privKey && params) {\n      if (!this.loginSettings.curve) {\n        this.loginSettings.curve =\n          this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA ? SUPPORTED_KEY_CURVES.ED25519 : SUPPORTED_KEY_CURVES.SECP256K1;\n      }\n      await this.openloginInstance.login(\n        merge(\n          this.loginSettings,\n          { loginProvider: params.loginProvider },\n          { extraLoginOptions: { ...(params.extraLoginOptions || {}), login_hint: params.login_hint || params.extraLoginOptions?.login_hint } }\n        )\n      );\n    }\n    let finalPrivKey = this.openloginInstance.privKey;\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        const { getED25519Key } = await import(\"@toruslabs/openlogin-ed25519\");\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.OPENLOGIN, reconnected: !params } as CONNECTED_EVENT_DATA);\n    }\n  }\n}\n","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./openloginAdapter\";\n"],"names":["OPENLOGIN_NETWORK","UX_MODE","getChainConfig","getOpenloginDefaultOptions","chainNamespace","chainId","adapterSettings","network","MAINNET","clientId","uxMode","POPUP","chainConfig","loginSettings","OpenLogin","getHashQueryParams","SUPPORTED_KEY_CURVES","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","BaseAdapter","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","CommonPrivateKeyProvider","merge","OpenloginAdapter","params","OPENLOGIN","MULTICHAIN","IN_APP","NOT_READY","EIP155","debug","defaultOptions","openloginOptions","sessionTime","currentChainNamespace","defaultChainIdConfig","rpcTarget","OTHER","invalidParams","privKeyProvider","provider","_","Error","options","isRedirectResult","REDIRECT","redirectResult","Object","keys","length","_pid","replaceUrlOnRedirect","openloginInstance","init","status","READY","emit","privKey","autoConnect","connect","error","CONNECTING","adapter","connectWithProvider","ERRORED","message","includes","popupClosed","connectionError","cleanup","CONNECTED","notConnectedError","notReady","logout","DISCONNECTED","getUserInfo","userInfo","idToken","customChainConfig","SOLANA","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","curve","ED25519","SECP256K1","login","loginProvider","extraLoginOptions","login_hint","finalPrivKey","getED25519Key","sk","toString","setupProvider","reconnected"],"sourceRoot":""}