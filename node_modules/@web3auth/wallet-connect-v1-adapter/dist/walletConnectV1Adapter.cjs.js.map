{"version":3,"file":"walletConnectV1Adapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/wallet-connect-v1-adapter/webpack/bootstrap","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/compat get default export","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/define property getters","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/make namespace object","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@walletconnect/client\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/ethereum-provider\"","webpack://@web3auth/wallet-connect-v1-adapter/./src/config.ts","webpack://@web3auth/wallet-connect-v1-adapter/./src/walletConnectV1adapter.ts","webpack://@web3auth/wallet-connect-v1-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@walletconnect/client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ethereum-provider\");","import { CHAIN_NAMESPACES, IWalletConnectExtensionAdapter } from \"@web3auth/base\";\n\nexport const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[] = [\n  {\n    name: \"Rainbow\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-rainbow.svg\",\n    mobile: {\n      native: \"rainbow:\",\n      universal: \"https://rnbwapp.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"MetaMask\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-metamask.svg\",\n    mobile: {\n      native: \"metamask:\",\n      universal: \"https://metamask.app.link\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n];\n","import WalletConnect from \"@walletconnect/client\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletConnectV1Data,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\nimport { WalletConnectProvider } from \"@web3auth/ethereum-provider\";\n\nimport { WALLET_CONNECT_EXTENSION_ADAPTERS } from \"./config\";\nimport { WalletConnectV1AdapterOptions } from \"./interface\";\n\nclass WalletConnectV1Adapter extends BaseEvmAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.WALLET_CONNECT_V1;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly adapterOptions: WalletConnectV1AdapterOptions;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public adapterData: WalletConnectV1Data = {\n    uri: \"\",\n    extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS,\n  };\n\n  public connector: WalletConnect | null = null;\n\n  private wcProvider: WalletConnectProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: WalletConnectV1AdapterOptions) {\n    super(options);\n    this.adapterOptions = { ...options };\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get connected(): boolean {\n    return !!this.connector?.connected;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.wcProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n    }\n    // Create a connector\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new WalletConnectProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig }, connector: this.connector });\n\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    this.status = ADAPTER_STATUS.READY;\n    log.debug(\"initializing wallet connect v1 adapter\");\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n    if (this.connected) {\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n      return this.provider;\n    }\n\n    if (this.status !== ADAPTER_STATUS.CONNECTING) {\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if (this.adapterOptions.adapterSettings?.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n        this.wcProvider = new WalletConnectProvider({\n          config: {\n            chainConfig: this.chainConfig as CustomChainConfig,\n            // network switching can be skipped with custom ui\n            skipLookupNetwork: this.adapterOptions.adapterSettings?.skipNetworkSwitching,\n          },\n          connector: this.connector,\n        });\n      }\n      await this.createNewSession();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1 });\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      // for wallet connect default modal.\n      this.connector.on(\"modal_closed\", async () => {\n        this.status = ADAPTER_STATUS.READY;\n        this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n        return reject(new Error(\"User closed modal\"));\n      });\n      try {\n        // Subscribe to session connection\n        this.connector.on(\"connect\", async (error: Error | null, payload: { params: { accounts: string[]; chainId: number }[] }) => {\n          if (error) {\n            this.emit(ADAPTER_EVENTS.ERRORED, error);\n          }\n          log.debug(\"connected event emitted by web3auth\");\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error: unknown) {\n        log.error(\"Wallet connect v1 adapter error while connecting\", error);\n        // ready again to be connected\n        this.status = ADAPTER_STATUS.READY;\n        this.rehydrated = true;\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        reject(\n          error instanceof Web3AuthError\n            ? error\n            : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error as Error)?.message || \"\"}`)\n        );\n      }\n    });\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    const { cleanup } = options;\n    if (!this.connector || !this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await super.disconnect();\n    await this.connector.killSession();\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  private async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    try {\n      if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n      const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n      if (networkSwitch) {\n        await networkSwitch.addNetwork({ chainConfig, appOrigin: window.location.hostname });\n      }\n      await this.wcProvider.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  private async switchChain(connectedChainConfig: Partial<CustomChainConfig>, chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n\n    if (networkSwitch) {\n      await networkSwitch.switchNetwork({\n        currentChainConfig: chainConfig,\n        newChainConfig: connectedChainConfig,\n        appOrigin: window.location.hostname,\n      });\n    }\n    await this.wcProvider.switchChain({ chainId: chainConfig.chainId, lookup: false, addChain: false });\n  }\n\n  private async createNewSession(opts: { forceNewSession: boolean } = { forceNewSession: false }): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    }\n    // for wallet connect qr modal\n    if (this.adapterOptions?.adapterSettings?.qrcodeModal) {\n      await this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) });\n      return;\n    }\n\n    // for web3auth qr code modal\n    return new Promise<void>((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      log.debug(\"creating new session for web3auth wallet connect\");\n      this.connector.on(\"display_uri\", async (err, payload) => {\n        if (err) {\n          this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.connectionError(\"Failed to display wallet connect qr code\"));\n          return reject(err);\n        }\n        const uri = payload.params[0];\n        this.updateAdapterData({ uri, extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS } as WalletConnectV1Data);\n\n        this.connector?.off(\"display_uri\");\n        return resolve();\n      });\n\n      this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) }).catch((error) => {\n        log.error(\"error while creating new wallet connect session\", error);\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n\n  private async onConnectHandler(params: { accounts: string[]; chainId: number }) {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n\n    const { chainId } = params;\n    log.debug(\"connected chainId in hex\");\n    if (chainId !== parseInt(this.chainConfig.chainId, 16)) {\n      const connectedChainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, chainId) || {\n        chainId: `0x${chainId.toString(16)}`,\n        displayName: \"Unknown Network\",\n      };\n\n      const isCustomUi = this.adapterOptions.adapterSettings?.qrcodeModal;\n      // skipping network is not allowed in default ui. We are use network switching modal for default ui.\n      if (!isCustomUi || (isCustomUi && !this.adapterOptions?.adapterSettings?.skipNetworkSwitching)) {\n        try {\n          await this.addChain(this.chainConfig);\n          await this.switchChain(connectedChainConfig, this.chainConfig);\n          this.connector = this.getWalletConnectInstance();\n        } catch (error) {\n          log.error(\"error while chain switching\", error);\n          // we need to create a new session since old session is already used and\n          // user needs to login again with correct chain with new qr code.\n          await this.createNewSession({ forceNewSession: true });\n          this.emit(\n            ADAPTER_EVENTS.ERRORED,\n            WalletInitializationError.fromCode(\n              5000,\n              `Not connected to correct network. Expected: ${this.chainConfig.displayName}, Current: ${\n                connectedChainConfig?.displayName || chainId\n              }, Please switch to correct network from wallet`\n            )\n          );\n          this.status = ADAPTER_STATUS.READY;\n          this.rehydrated = true;\n          return;\n        }\n      }\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n  }\n\n  private subscribeEvents(connector: WalletConnect): void {\n    connector.on(\"session_update\", async (error: Error | null) => {\n      if (error) {\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n      }\n    });\n  }\n\n  private getWalletConnectInstance(): WalletConnect {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || \"https://bridge.walletconnect.org\";\n    // Create a connector\n    return new WalletConnect(walletConnectOptions);\n  }\n}\n\nexport { WalletConnectV1Adapter };\n","export * from \"./interface\";\nexport * from \"./walletConnectV1adapter\";\n"],"names":["CHAIN_NAMESPACES","WALLET_CONNECT_EXTENSION_ADAPTERS","name","chains","EIP155","logo","mobile","native","universal","desktop","WalletConnect","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","WalletConnectProvider","WalletConnectV1Adapter","options","WALLET_CONNECT_V1","EXTERNAL","NOT_READY","uri","extensionAdapters","adapterOptions","chainConfig","sessionTime","connector","connected","wcProvider","provider","_","Error","getWalletConnectInstance","config","emit","READY","status","debug","rehydrated","onConnectHandler","accounts","chainId","notReady","CONNECTING","adapterSettings","qrcodeModal","skipLookupNetwork","skipNetworkSwitching","createNewSession","adapter","Promise","resolve","reject","on","error","payload","ERRORED","params","connectionError","message","clientId","notConnectedError","cleanup","killSession","DISCONNECTED","networkSwitch","networkSwitchModal","addNetwork","appOrigin","window","location","hostname","addChain","connectedChainConfig","switchNetwork","currentChainConfig","newChainConfig","switchChain","lookup","opts","forceNewSession","pending","createSession","parseInt","err","updateAdapterData","off","catch","invalidParams","toString","displayName","isCustomUi","fromCode","setupProvider","subscribeEvents","CONNECTED","reconnected","walletConnectOptions","bridge"],"sourceRoot":""}