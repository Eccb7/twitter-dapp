{"version":3,"file":"web3auth.cjs.js","mappings":"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","sources":["webpack://@web3auth/web3auth/./src/config.ts","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/toConsumableArray\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/core\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/ui\"","webpack://@web3auth/web3auth/./src/default.ts","webpack://@web3auth/web3auth/./src/modalManager.ts","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/metamask-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/openlogin-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/phantom-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/torus-evm-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/torus-solana-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/wallet-connect-v1-adapter\"","webpack://@web3auth/web3auth/webpack/bootstrap","webpack://@web3auth/web3auth/webpack/runtime/compat get default export","webpack://@web3auth/web3auth/webpack/runtime/create fake namespace object","webpack://@web3auth/web3auth/webpack/runtime/define property getters","webpack://@web3auth/web3auth/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/web3auth/webpack/runtime/make namespace object","webpack://@web3auth/web3auth/./src/index.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, EVM_ADAPTERS, SOLANA_ADAPTERS } from \"@web3auth/base\";\n\nimport { AdaptersModalConfig } from \"./interface\";\n\nexport const defaultSolanaDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultSolanaWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultOtherModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.OTHER,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ui\");","import type { OpenLoginOptions } from \"@toruslabs/openlogin\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, IAdapter, WALLET_ADAPTER_TYPE, WALLET_ADAPTERS } from \"@web3auth/base\";\n\nexport const getDefaultAdapterModule = async (params: {\n  name: WALLET_ADAPTER_TYPE;\n  clientId: string;\n  customChainConfig: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n}): Promise<IAdapter<unknown>> => {\n  const { name, customChainConfig, clientId } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace))\n    throw new Error(`Invalid chainNamespace: ${customChainConfig.chainNamespace}`);\n  const finalChainConfig = {\n    ...(getChainConfig(customChainConfig.chainNamespace, customChainConfig?.chainId) as CustomChainConfig),\n    ...(customChainConfig || {}),\n  };\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const { TorusWalletAdapter } = await import(\"@web3auth/torus-evm-adapter\");\n    const adapter = new TorusWalletAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const { SolanaWalletAdapter } = await import(\"@web3auth/torus-solana-adapter\");\n    const adapter = new SolanaWalletAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const { MetamaskAdapter } = await import(\"@web3auth/metamask-adapter\");\n    const adapter = new MetamaskAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const { PhantomAdapter } = await import(\"@web3auth/phantom-adapter\");\n    const adapter = new PhantomAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const { WalletConnectV1Adapter } = await import(\"@web3auth/wallet-connect-v1-adapter\");\n    const adapter = new WalletConnectV1Adapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const { OpenloginAdapter, getOpenloginDefaultOptions } = await import(\"@web3auth/openlogin-adapter\");\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig?.chainId);\n    const adapter = new OpenloginAdapter({\n      ...defaultOptions,\n      chainConfig: { ...(defaultOptions.chainConfig || {}), ...finalChainConfig },\n      adapterSettings: { ...(defaultOptions.adapterSettings as OpenLoginOptions), clientId },\n    });\n    return adapter;\n  }\n  throw new Error(\"Invalid wallet adapter name\");\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  BaseAdapterConfig,\n  CHAIN_NAMESPACES,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  WALLET_ADAPTER_TYPE,\n  WALLET_ADAPTERS,\n} from \"@web3auth/base\";\nimport { Web3AuthCore, Web3AuthCoreOptions } from \"@web3auth/core\";\nimport LoginModal, { getAdapterSocialLogins, LOGIN_MODAL_EVENTS, OPENLOGIN_PROVIDERS } from \"@web3auth/ui\";\n\nimport {\n  defaultEvmDappModalConfig,\n  defaultEvmWalletModalConfig,\n  defaultOtherModalConfig,\n  defaultSolanaDappModalConfig,\n  defaultSolanaWalletModalConfig,\n} from \"./config\";\nimport { getDefaultAdapterModule } from \"./default\";\nimport { AdaptersModalConfig, ModalConfig } from \"./interface\";\n\nexport interface UIConfig {\n  /**\n   * Logo for your app.\n   */\n  appLogo?: string;\n\n  /**\n   * theme for the modal\n   *\n   * @defaultValue `light`\n   */\n  theme?: \"light\" | \"dark\";\n\n  /**\n   * order of how login methods are shown\n   *\n   * @defaultValue `[\"google\", \"facebook\", \"twitter\", \"reddit\", \"discord\", \"twitch\", \"apple\", \"line\", \"github\", \"kakao\", \"linkedin\", \"weibo\", \"wechat\", \"email_passwordless\"]`\n   */\n  loginMethodsOrder?: string[];\n}\nexport interface Web3AuthOptions extends Web3AuthCoreOptions {\n  /**\n   * web3auth instance provides different adapters for different type of usages. If you are dapp and want to\n   * use external wallets like metamask, then you can use the `DAPP` authMode.\n   * If you are a wallet and only want to use you own wallet implementations along with openlogin,\n   * then you should use `WALLET` authMode.\n   *\n   * @defaultValue `DAPP`\n   */\n  authMode?: \"DAPP\" | \"WALLET\";\n  /**\n   * Config for configuring modal ui display properties\n   */\n  uiConfig?: UIConfig;\n\n  /**\n   * Whether to show errors on Web3Auth modal.\n   *\n   * @defaultValue `true`\n   */\n  displayErrorsOnModal?: boolean;\n}\nexport class Web3Auth extends Web3AuthCore {\n  public loginModal: LoginModal;\n\n  readonly options: Web3AuthOptions;\n\n  private modalConfig: AdaptersModalConfig = defaultEvmDappModalConfig;\n\n  constructor(options: Web3AuthOptions) {\n    super(options);\n    this.options = { ...options };\n    const providedChainConfig = this.options.chainConfig;\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.modalConfig = defaultOtherModalConfig;\n    } else {\n      throw new Error(`Invalid chainNamespace provided: ${providedChainConfig.chainNamespace}`);\n    }\n    this.loginModal = new LoginModal({\n      theme: this.options.uiConfig?.theme,\n      appLogo: this.options.uiConfig?.appLogo || \"\",\n      version: \"\",\n      adapterListener: this,\n      displayErrorsOnModal: this.options.displayErrorsOnModal,\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  public async initModal(params?: { modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig> }): Promise<void> {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig;\n\n    // merge default adapters with the custom configured adapters.\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n\n    const adapterConfigurationPromises = allAdapters.map(async (adapterName) => {\n      // start with the default config of adapter.\n      let adapterConfig = this.modalConfig.adapters?.[adapterName] || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true,\n      };\n\n      // override the default config of adapter if some config is being provided by the user.\n      if (params?.modalConfig?.[adapterName]) {\n        adapterConfig = { ...adapterConfig, ...params.modalConfig[adapterName] };\n      }\n      (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName] = adapterConfig as ModalConfig;\n\n      // check if adapter is configured/added by user and exist in walletAdapters map.\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, this.modalConfig.adapters?.[adapterName].showOnModal, adapter);\n\n      // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n      if (!adapter && this.modalConfig.adapters?.[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId,\n        });\n\n        this.walletAdapters[adapterName] = ad;\n\n        return adapterName;\n      } else if (adapter?.type === ADAPTER_CATEGORY.IN_APP || adapter?.type === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        if (!this.modalConfig.adapters?.[adapterName].showOnModal) return;\n        // add client id to adapter, same web3auth client id can be used in adapter.\n        // this id is being overridden if user is also passing client id in adapter's constructor.\n        this.walletAdapters[adapterName].setAdapterSettings({ clientId: this.options.clientId, sessionTime: this.options.sessionTime });\n\n        // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n        if (!adapter.chainConfigProxy) {\n          const chainConfig = {\n            ...getChainConfig(providedChainConfig.chainNamespace, this.coreOptions.chainConfig?.chainId),\n            ...this.coreOptions.chainConfig,\n          } as CustomChainConfig;\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some((adapter) => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(\n        adapter.name,\n        this.walletAdapters[adapter.name],\n        (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapter.name]?.loginMethods\n      );\n      if (Object.values(mergedLoginMethods).some((method) => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\");\n    // Now, initialize the adapters.\n    const initPromises = adapterNames.map(async (adapterName) => {\n      if (!adapterName) return;\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        // only initialize a external adapter here if it is a cached adapter.\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        }\n        // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n        // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n\n    const hasExternalWallets = allAdapters.some((adapterName) => {\n      return this.walletAdapters[adapterName]?.type === ADAPTER_CATEGORY.EXTERNAL && this.modalConfig.adapters?.[adapterName].showOnModal;\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    }\n\n    // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, { showExternalWalletsOnly: true });\n    }\n  }\n\n  public async connect(): Promise<SafeEventEmitterProvider | null> {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, (err: unknown) => {\n        return reject(err);\n      });\n    });\n  }\n\n  private async initExternalWalletAdapters(externalWalletsInitialized: boolean, options?: { showExternalWalletsOnly: boolean }): Promise<void> {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig: Record<string, BaseAdapterConfig> = {};\n    const adaptersData: Record<string, unknown> = {};\n    const adapterPromises = Object.keys(this.walletAdapters).map(async (adapterName) => {\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        if (adapter?.type === ADAPTER_CATEGORY.EXTERNAL) {\n          log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n          this.subscribeToAdapterEvents(adapter);\n          // we are not initializing cached adapter here as it is already being initialized in initModal before.\n          if (this.cachedAdapter === adapterName) {\n            return;\n          }\n          if (adapter.status === ADAPTER_STATUS.NOT_READY)\n            return await Promise.race([\n              adapter.init({ autoConnect: this.cachedAdapter === adapterName }).then(() => {\n                adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n                adaptersData[adapterName] = adapter.adapterData || {};\n                return adapterName;\n              }),\n              new Promise((resolve) => {\n                setTimeout(() => {\n                  return resolve(null);\n                }, 5000);\n              }),\n            ]);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    const adapterInitResults = await Promise.all(adapterPromises);\n    const finalAdaptersConfig: Record<WALLET_ADAPTER_TYPE, BaseAdapterConfig> = {};\n    adapterInitResults.forEach((result: string | undefined) => {\n      if (result) {\n        finalAdaptersConfig[result] = adaptersConfig[result];\n      }\n    });\n    this.loginModal.addWalletLogins(finalAdaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n  }\n\n  private initializeInAppWallet(adapterName: string): void {\n    log.info(\"adapterInitResults\", adapterName);\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      this.loginModal.addSocialLogins(\n        adapterName,\n        getAdapterSocialLogins(\n          adapterName,\n          this.walletAdapters[adapterName],\n          (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName]?.loginMethods\n        ),\n        this.options.uiConfig?.loginMethodsOrder || OPENLOGIN_PROVIDERS\n      );\n    }\n  }\n\n  private subscribeToLoginModalEvents(): void {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async (params: { adapter: WALLET_ADAPTER_TYPE; loginParams: unknown }) => {\n      try {\n        await this.connectTo<unknown>(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(`Error while connecting to adapter: ${params.adapter}`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async (params: { externalWalletsInitialized: boolean }) => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(`Error while disconnecting`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async (visibility: boolean) => {\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]?.status;\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(`Error while disconnecting to wallet connect in core`, error);\n        }\n      }\n    });\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@web3auth/metamask-adapter\");","module.exports = require(\"@web3auth/openlogin-adapter\");","module.exports = require(\"@web3auth/phantom-adapter\");","module.exports = require(\"@web3auth/torus-evm-adapter\");","module.exports = require(\"@web3auth/torus-solana-adapter\");","module.exports = require(\"@web3auth/wallet-connect-v1-adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./modalManager\";\n"],"names":["CHAIN_NAMESPACES","EVM_ADAPTERS","SOLANA_ADAPTERS","defaultSolanaDappModalConfig","chainNamespace","SOLANA","adapters","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","defaultOtherModalConfig","OTHER","getChainConfig","WALLET_ADAPTERS","getDefaultAdapterModule","params","name","customChainConfig","clientId","Object","values","includes","Error","finalChainConfig","chainId","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_STATUS","log","Web3AuthCore","LoginModal","getAdapterSocialLogins","LOGIN_MODAL_EVENTS","OPENLOGIN_PROVIDERS","Web3Auth","options","providedChainConfig","authMode","modalConfig","loginModal","theme","uiConfig","appLogo","version","adapterListener","displayErrorsOnModal","subscribeToLoginModalEvents","initModal","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","adapterConfig","debug","ad","type","IN_APP","EXTERNAL","cachedAdapter","setAdapterSettings","sessionTime","chainConfigProxy","coreOptions","setChainConfig","Promise","all","adapterNames","hasInAppWallets","some","loginMethods","mergedLoginMethods","method","initPromises","subscribeToAdapterEvents","status","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","provider","open","resolve","reject","once","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","adaptersData","adapterPromises","race","then","adapterData","setTimeout","adapterInitResults","finalAdaptersConfig","forEach","result","addWalletLogins","info","addSocialLogins","loginMethodsOrder","on","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus","connect"],"sourceRoot":""}